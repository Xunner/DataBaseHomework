<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xunner.mapper.OrderMapper">
	<select id="getById" resultType="xunner.bean.Order">
		SELECT *
		FROM orders
		WHERE order_id = #{orderId};
	</select>

	<insert id="add" useGeneratedKeys="true" keyProperty="order_id" parameterType="Order">
		INSERT INTO orders (user_id, plan_id, date, state)
		VALUES (#{userId}, #{planId}, #{date}, #{state})
	</insert>

	<update id="update" parameterType="Order">
		UPDATE orders
		SET state = #{state}
		WHERE order_id = #{orderId}
	</update>

	<select id="getValidOrdersMessages" resultMap="validOrdersMessages">
		SELECT p.plan_id AS "plan_id",
		       name,
		       price,
		       minutes,
		       message,
		       local_data,
		       national_data,
		       is_abolished,
		       state,
		       order_id
		FROM plans p
			     inner join orders o on p.plan_id = o.plan_id
		WHERE o.user_id = #{arg0}
		  AND state != 2
		  AND date BETWEEN #{arg1} AND #{arg2}
	</select>
	<resultMap id="validOrdersMessages" type="map">
		<result property="state" column="state" javaType="OrderState"/>
		<result property="orderId" column="order_id"/>
		<association property="plan" javaType="Plan">
			<id property="planId" column="plan_id"/>
			<result property="name" column="name"/>
			<result property="price" column="price"/>
			<result property="minutes" column="minutes"/>
			<result property="message" column="message"/>
			<result property="localData" column="local_data"/>
			<result property="nationalData" column="national_data"/>
			<result property="isAbolished" column="is_abolished"/>
		</association>
	</resultMap>

	<select id="getOrdersByUserIdAndDates" resultMap="OrdersByUserIdAndDates">
		SELECT p.plan_id AS "plan_id",
		       name,
		       price,
		       minutes,
		       message,
		       local_data,
		       national_data,
		       is_abolished,
		       state,
		       date
		FROM orders o,
		     plans p
		WHERE o.user_id = #{arg0}
		  AND o.plan_id = p.plan_id
		  AND date BETWEEN #{arg1} AND #{arg2}
	</select>
	<resultMap id="OrdersByUserIdAndDates" type="map">
		<result property="state" column="state" javaType="OrderState"/>
		<result property="date" column="date"/>
		<association property="plan" javaType="Plan">
			<id property="planId" column="plan_id"/>
			<result property="name" column="name"/>
			<result property="price" column="price"/>
			<result property="minutes" column="minutes"/>
			<result property="message" column="message"/>
			<result property="localData" column="local_data"/>
			<result property="nationalData" column="national_data"/>
			<result property="isAbolished" column="is_abolished"/>
		</association>
	</resultMap>

	<select id="getValidOrdersIdAndTotal" resultMap="validOrdersIdAndTotal">
		select order_id, minutes, message, local_data, national_data
		from orders,
		     plans
		where user_id = #{arg0}
		  and orders.plan_id = plans.plan_id
		  and state != 2
		  and date between #{arg1} and #{arg2}
	</select>
	<resultMap id="validOrdersIdAndTotal" type="map">
		<result property="orderId" column="order_id"/>
		<result property="minutes" column="minutes"/>
		<result property="message" column="message"/>
		<result property="localData" column="local_data"/>
		<result property="nationalData" column="national_data"/>
	</resultMap>
</mapper>